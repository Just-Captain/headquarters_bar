from telegram.ext import ContextTypes
from telegram import Update, ReplyKeyboardRemove
from bot.models import User, Worker
from bot.management.commands.start_keyboard import start_keyboard, start_job_keyboard
from bot.management.commands.sync_request import create_data_id_phone_async, get_data_phone_async, get_data_id_async, save_data_async

async def phone_number(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    print('phone_number')
    state = context.bot_data.get('state')
    if state == 'start':
        user = update.effective_user
        user_id = user.id
        phone_number = update.effective_message.contact.phone_number
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        try:
            user_profile = await get_data_id_async(User, user_id)
            await context.bot.send_message(chat_id=update.effective_chat.id, text='üü¢ –í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!')
        except User.DoesNotExist:
            # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_profile = await create_data_id_phone_async(User, user_id, phone_number)
            await context.bot.send_message(chat_id=update.effective_chat.id, text='‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!')
            await context.bot.send_message(chat_id=update.effective_chat.id, text='üìÅ –î–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –≤–æ –≤–∫–ª–∞–¥–∫–µ "ü™™ –í–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–∞"')
            await start_keyboard(update, context)
            
    elif state == 'start_job':
        user = update.effective_user
        user_id = user.id
        phone_number = update.effective_message.contact.phone_number
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        try:
            job_profile = await get_data_id_async(Worker, user_id)
            await context.bot.send_message(chat_id=update.effective_chat.id, text='üü¢ –í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!')
        except Worker.DoesNotExist:
            job_profile = await create_data_id_phone_async(Worker, user_id, phone_number)
            await save_data_async(job_profile)
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞–±–æ—Ç–Ω–∏–∫–µ
            await context.bot.send_message(chat_id=update.effective_chat.id, text='‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!')
            await context.bot.send_message(chat_id=update.effective_chat.id, text=f'–í–∞—à ID: {job_profile.external_id}', reply_markup=ReplyKeyboardRemove()) 
            await start_job_keyboard(update, context)
    else:
        pass